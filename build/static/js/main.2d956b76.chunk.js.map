{"version":3,"sources":["components/contactForm.js","firebase.js","components/contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","initialvalues","name","mobile","email","address","useState","values","setValues","console","log","currentId","useEffect","contactObject","handleInputChange","e","target","value","className","autoComplete","onSubmit","preventDefault","addoredit","class","type","placeholder","onChange","cols","rows","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Contact","setContactObject","setCurrentId","child","on","snapshot","val","obj","push","err","set","scope","Object","keys","map","id","onClick","takeid","window","confirm","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d956b76.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nconst ContactForm = (props) => {\r\n\r\n  const initialvalues = {\r\n    name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    address: \"\"\r\n  }\r\n\r\n  var [values, setValues] = useState(initialvalues);\r\n  console.log(props.currentId);\r\n\r\n  useEffect(() => {\r\n    if(props.currentId == '')\r\n      setValues({\r\n        ...initialvalues\r\n      })\r\n      else\r\n      setValues({\r\n        ...props.contactObject[props.currentId]\r\n      })\r\n    \r\n  }, [props.currentId, props.contactObject]);\r\n\r\n  const handleInputChange = e => {\r\n    var {name, value} = e.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n      //or\r\n      // address: value\r\n    })\r\n  }\r\n\r\n\r\n    const submitHandle = (e) => {\r\n  e.preventDefault();\r\n  props.addoredit(values);\r\n  }\r\n\r\n  // const [name, setName] = useState(\"\");\r\n  // const [mobile, setMobile] = useState(0);\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [address, setAddress] = useState(\"\");\r\n  \r\n  // // const [values, setValues] = useState()\r\n  // const data = {name, mobile, email, address}\r\n  // var [values, setValues] = useState({data});\r\n\r\n  // useEffect(() => {\r\n  //   if(props.currendId !== \"\"){\r\n  //     setValues({\r\n  //       ...props.contactObject[props.currendId]\r\n  //     })\r\n  //   }\r\n  // }, [props.currendId, props.contactObject])\r\n\r\n  // const submitHandle = (e) => {\r\n  // e.preventDefault();\r\n  // props.addoredit(data);\r\n  // }\r\n    return (\r\n        <div className=\"contactForm\">\r\n            <form autoComplete=\"off\" onSubmit={submitHandle}>\r\n                {/* <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <input type=\"text\" placeholder=\"Full Name\"/>\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div class=\"form-row\">\r\n                    <div className=\"form-group col-md-12\">\r\n                <input className=\"form-control\" type=\"text\" placeholder=\"Full Nmae\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n                />\r\n                    </div>\r\n              <div class=\"form-group col-md-6\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Mobile\"\r\n               name=\"mobile\"\r\n               value={values.mobile}\r\n               onChange={handleInputChange}\r\n                />\r\n             </div>\r\n            <div class=\"form-group col-md-6\">\r\n             <input type=\"email\" class=\"form-control\" placeholder=\"Email\"\r\n             name=\"email\"\r\n             value={values.email}\r\n             onChange={handleInputChange}\r\n             />\r\n          </div>\r\n          <div className=\"form-group col-md-12\">\r\n            <textarea className=\"form-control\" cols=\"5\" rows=\"2\" placeholder=\"Address\"\r\n                 name=\"address\"\r\n                 value={values.address}\r\n                 onChange={handleInputChange}\r\n            ></textarea>\r\n          </div>\r\n         </div>\r\n\r\n         {props.currentId == '' ? <button className=\"btn btn-primary btn-block\">Save</button> : <button className=\"btn btn-primary btn-block\">update</button>}\r\n            </form>\r\n\r\n           \r\n \r\n\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default ContactForm;","import firebase from 'firebase';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyALz1nDUmO3kLwxcMhMmMWxXTYFout1Jsw\",\r\n  authDomain: \"react-crud-60f29.firebaseapp.com\",\r\n  databaseURL: \"https://react-crud-60f29-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-crud-60f29\",\r\n  storageBucket: \"react-crud-60f29.appspot.com\",\r\n  messagingSenderId: \"1082209226361\",\r\n  appId: \"1:1082209226361:web:2b974e95c2e343d59e8ea8\"\r\n};\r\n  // Initialize Firebase\r\n  var fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\n  export default fireDb.database().ref();","\r\nimport ContactForm from \"./contactForm\";\r\nimport fireDb from \"../firebase\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Contact = () => {\r\n\r\n    const [contactObject, setContactObject] = useState({});\r\n    const [currentId, setCurrentId] = useState('');\r\n    \r\n\r\n    useEffect(() => {\r\n        fireDb.child('contacts').on('value', snapshot => {\r\n            if(snapshot.val() != null){\r\n                setContactObject({...snapshot.val()});\r\n            }else{\r\n                setContactObject({});\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const addoredit = (obj) => {\r\n        if(currentId == ''){\r\n        fireDb.child('contacts').push(\r\n            obj,\r\n            //noe call back function\r\n            err => {\r\n                if(err){\r\n                    console.log(err);\r\n                }else{\r\n                    setCurrentId('');\r\n                } \r\n            }\r\n        )       \r\n    }else{\r\n        fireDb.child(`contacts/${currentId}`).set(\r\n            obj,\r\n            err => {\r\n                if(err){\r\n                    console.log(err);\r\n                }else{\r\n                    setCurrentId('');\r\n                } \r\n\r\n            }\r\n\r\n        )\r\n}\r\n    }\r\n\r\n    const handleDelete = (takeid) => {\r\n        if(window.confirm(\"are you sure you want to delete!\")){\r\n        fireDb.child(`contacts/${takeid}`).remove(\r\n            err => {\r\n                if(err){\r\n                    console.log(err);\r\n                }else{\r\n                    setCurrentId('');\r\n                } \r\n\r\n            }\r\n        )\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>  \r\n            <div class=\"jumbotron jumbotron-fluid\">\r\n  <div class=\"container\">\r\n    <h1 class=\"display-4 text-center\">Contact Registration</h1>\r\n  </div>\r\n  </div>\r\n\r\n    <div className=\"row\">\r\n        <div className=\"col-md-5\">\r\n            <ContactForm {...({addoredit, currentId, contactObject})}></ContactForm>\r\n        </div>\r\n        <div className=\"col-md-7\">\r\n        <table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Full Nmae</th>\r\n      <th scope=\"col\">Mobile</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {\r\n        \r\n          Object.keys(contactObject).map((id) => {\r\n              return(\r\n                <tr key={id}>\r\n                <td>{contactObject[id].name}</td>\r\n                <td>{contactObject[id].mobile}</td>\r\n                <td>{contactObject[id].email}</td>\r\n                <td>\r\n                    <a className=\"btn text-primary d-inline-block\" \r\n                    onClick={() => {setCurrentId(id)}}> <i className=\"fas fa-pencil-alt\"></i></a>\r\n                    <a className=\"btn text-danger d-inline-block\" \r\n                    onClick={() => {handleDelete(id)}}> <i className=\"fas fa-trash-alt\"></i></a>\r\n\r\n                </td>\r\n              </tr> \r\n              ) \r\n          })\r\n      }\r\n   \r\n  </tbody>\r\n</table>\r\n\r\n        </div>\r\n    </div>\r\n\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Contact;\r\n","import React from \"react\";\nimport './App.css';\nimport Contact from \"./components/contacts\";\n\nfunction App() {\n  return (\n    <>\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n         <Contact></Contact>\n         </div>\n      </div>\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}